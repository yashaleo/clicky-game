{"ast":null,"code":"import _toConsumableArray from \"/Users/jasonnisttahuz/Clickly Game/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/jasonnisttahuz/Clickly Game/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/jasonnisttahuz/Clickly Game/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/jasonnisttahuz/Clickly Game/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/jasonnisttahuz/Clickly Game/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/jasonnisttahuz/Clickly Game/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/jasonnisttahuz/Clickly Game/client/src/App.js\";\nimport React from \"react\";\nimport Image from \"./components/Image\";\nimport API from \"./utils/API\";\nvar my_images = [{\n  id: 0,\n  alt: \"moutains\",\n  src: \"https://giphy.com/gifs/8OJdqYqN1Nii3UTD6l/html5\"\n}, {\n  id: 1,\n  alt: \"krabs\",\n  src: \"https://vignette3.wikia.nocookie.net/vsbattles/images/8/80/Mr._Krabs.png/revision/latest?cb=20150919162131\"\n}, {\n  id: 2,\n  alt: \"squid\",\n  src: \"https://vignette2.wikia.nocookie.net/fictionalcharacters/images/a/ac/Squidward.png/revision/latest?cb=20131121012626\"\n}, {\n  id: 3,\n  alt: \"onim\",\n  src: \"https://s-media-cache-ak0.pinimg.com/originals/fe/32/49/fe32495d45283cd6860ae122f0aeaad9.png\"\n}];\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      score: 0,\n      images: [],\n      images_clicked: [],\n      searchterm: \"Nature\"\n    };\n\n    _this.clickme = function (data) {\n      var id = data.id;\n      var mongo_data = {\n        src: data.src,\n        id: data.id,\n        alt: data.alt\n      };\n\n      if (_this.state.images_clicked.indexOf(id) === -1) {\n        //image doesn't exist\n        _this.setState({\n          score: _this.state.score + 1,\n          images_clicked: [].concat(_toConsumableArray(_this.state.images_clicked), [id]),\n          images: _this.state.images.sort(function () {\n            return Math.random() - 0.5;\n          })\n        }); //mongo expects id, src, alt\n\n\n        API.upload_data(mongo_data).then(function (res) {\n          console.log(res);\n        });\n      } else {\n        _this.setState({\n          score: 0,\n          images_clicked: [],\n          images: _this.state.images.sort(function () {\n            return Math.random() - 0.5;\n          })\n        });\n      }\n    };\n\n    _this.searchGiphy = function (event) {\n      var value = event.target.value.trim();\n\n      _this.setState({\n        searchterm: value\n      });\n\n      API.search(_this.state.searchterm).then(function (res) {\n        _this.setState({\n          images: res.data.data\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      API.search(this.state.searchterm).then(function (res) {\n        _this2.setState({\n          images: res.data.data\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, this.state.searchterm), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.searchterm,\n        onChange: this.searchGiphy,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Score: \", this.state.score), this.state.images.map(function (img) {\n        return React.createElement(Image, {\n          id: img.id,\n          alt: img.slug,\n          src: img.images.fixed_height_still.url,\n          key: img.id,\n          clickme: _this3.clickme,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/jasonnisttahuz/Clickly Game/client/src/App.js"],"names":["React","Image","API","my_images","id","alt","src","App","state","score","images","images_clicked","searchterm","clickme","data","mongo_data","indexOf","setState","sort","Math","random","upload_data","then","res","console","log","searchGiphy","event","value","target","trim","search","map","img","slug","fixed_height_still","url","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport Image from \"./components/Image\";\r\nimport API from \"./utils/API\";\r\n\r\nvar my_images = [\r\n  { id: 0, alt:\"moutains\", src: \"https://giphy.com/gifs/8OJdqYqN1Nii3UTD6l/html5\" },\r\n  { id: 1, alt: \"krabs\", src: \"https://vignette3.wikia.nocookie.net/vsbattles/images/8/80/Mr._Krabs.png/revision/latest?cb=20150919162131\" },\r\n  { id: 2, alt: \"squid\", src: \"https://vignette2.wikia.nocookie.net/fictionalcharacters/images/a/ac/Squidward.png/revision/latest?cb=20131121012626\" },\r\n  { id: 3, alt: \"onim\", src: \"https://s-media-cache-ak0.pinimg.com/originals/fe/32/49/fe32495d45283cd6860ae122f0aeaad9.png\" }\r\n]\r\n\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        score: 0,\r\n        images:[],\r\n        images_clicked:[],\r\n        searchterm:\"Nature\"\r\n    }\r\n    componentDidMount() {\r\n        API.search(this.state.searchterm)\r\n            .then(res => {\r\n                this.setState({\r\n                    images: res.data.data\r\n                })\r\n            })        \r\n    }\r\n    \r\n    clickme = (data) => {\r\n        let id = data.id;\r\n        let mongo_data={\r\n            src : data.src,\r\n            id  : data.id,\r\n            alt : data.alt\r\n        };\r\n\r\n        if (this.state.images_clicked.indexOf(id)===-1) {\r\n            //image doesn't exist\r\n            this.setState({\r\n                score:this.state.score + 1,\r\n                images_clicked: [...this.state.images_clicked, id],\r\n                images: this.state.images.sort(() => Math.random() - 0.5)\r\n            });\r\n            //mongo expects id, src, alt\r\n            API.upload_data(mongo_data)\r\n                .then(res => {\r\n                    console.log(res)\r\n                });\r\n        } else {\r\n            this.setState({\r\n                score: 0,\r\n                images_clicked: [],\r\n                images: this.state.images.sort( () => Math.random() - 0.5)\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    searchGiphy = (event) => {\r\n        let value = event.target.value.trim();\r\n        this.setState({\r\n            searchterm: value\r\n        });\r\n        API.search(this.state.searchterm)\r\n        .then(res=>{\r\n            this.setState({\r\n                images: res.data.data\r\n            })\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div>{this.state.searchterm}</div>\r\n                <div>\r\n                    <input type=\"text\" value={this.state.searchterm} onChange={this.searchGiphy} />\r\n                </div>\r\n                <div>Score: {this.state.score}</div>\r\n                {this.state.images.map( (img) => ( \r\n                    <Image id={img.id} alt={img.slug} src={img.images.fixed_height_still.url} key={img.id} clickme={this.clickme} /> )\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}